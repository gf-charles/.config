# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # Networking
  networking.hostName = "xps13";

  # Driver
  services.xserver.videoDrivers = [ "intel" ];
  hardware.graphics = {
    enable = true;
    # For Intel graphics, ensure Mesa drivers are available for OpenGL/Vulkan.
    # 'mesa.drivers' typically includes the Intel i965/iris drivers and Vulkan support.
    extraPackages = with pkgs; [
      mesa
      vulkan-loader # Essential Vulkan runtime library
      # Optional: vulkan-tools for testing Vulkan setup (e.g., `vulkaninfo`)
      vulkan-tools
    ];
  };

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ "btrfs" "dm-crypt" "nvme" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4FA2-13AE";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/02214cce-b6e9-4c68-a4df-7193c97ab3b6";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/25f8ed81-9776-4fbd-9b1a-13cb12a3f098";
      fsType = "btrfs";
      options = [ "subvol=@" "noatime" "compress=zstd:3" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/25f8ed81-9776-4fbd-9b1a-13cb12a3f098";
      fsType = "btrfs";
      options = [ "subvol=@home" "noatime" "compress=zstd:3" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/25f8ed81-9776-4fbd-9b1a-13cb12a3f098";
      fsType = "btrfs";
      options = [ "subvol=@nix" "noatime" "compress=zstd:3" ];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/25f8ed81-9776-4fbd-9b1a-13cb12a3f098";
      fsType = "btrfs";
      options = [ "subvol=@persist" "noatime" "compress=zstd:3" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/25f8ed81-9776-4fbd-9b1a-13cb12a3f098";
      fsType = "btrfs";
      options = [ "subvol=@swap" "noatime" "compress=zstd:3" ];
    };

  swapDevices = [{ device = "/swap/swapfile"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  boot.loader.systemd-boot.enable = true; boot.loader.efi.canTouchEfiVariables = true;
}
